{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sazze/coding/side-projects/forum/client/src/components/Post.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Comment from \"./Comment\";\nimport PostSkeleton from \"./PostSkeleton\";\nimport { getPost } from \"../services/posts\";\nimport { convertDate } from \"../helpers\";\n\nconst Post = () => {\n  _s();\n\n  const [post, setPost] = useState({});\n  let {\n    id\n  } = useParams();\n  useEffect(() => {\n    getPost(id).then(res => {\n      console.log(res);\n      setPost(res);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        width: 100\n      },\n      children: post.title || /*#__PURE__*/_jsxDEV(PostSkeleton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 49\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n      children: post.author ? `by ${post.author} on ${convertDate(post.date)}` : /*#__PURE__*/_jsxDEV(PostSkelenton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: post.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Comment, {\n      post: post\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Post, \"hbQNOuZxf5FZ6fitqjBuUC2ntK0=\", false, function () {\n  return [useParams];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/sazze/coding/side-projects/forum/client/src/components/Post.js"],"names":["useEffect","useState","useParams","Comment","PostSkeleton","getPost","convertDate","Post","post","setPost","id","then","res","console","log","width","title","author","date","body"],"mappings":";;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,WAAT,QAA4B,YAA5B;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,MAAI;AAAES,IAAAA;AAAF,MAASR,SAAS,EAAtB;AACAF,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,OAAO,CAACK,EAAD,CAAP,CAAYC,IAAZ,CAAiBC,GAAG,IAAI;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAH,MAAAA,OAAO,CAACG,GAAD,CAAP;AACD,KAHD;AAID,GALQ,EAKN,EALM,CAAT;AAMA,sBACE;AAAA,4BACE;AAAI,MAAA,KAAK,EAAE;AAAEG,QAAAA,KAAK,EAAE;AAAT,OAAX;AAAA,gBAA4BP,IAAI,CAACQ,KAAL,iBAAc,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAA1C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGR,IAAI,CAACS,MAAL,GACE,MAAKT,IAAI,CAACS,MAAO,OAAMX,WAAW,CAACE,IAAI,CAACU,IAAN,CAAY,EADhD,gBAGC,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YAFF,eASE;AAAA,gBAAIV,IAAI,CAACW;AAAT;AAAA;AAAA;AAAA;AAAA,YATF,eAUE,QAAC,OAAD;AAAS,MAAA,IAAI,EAAEX;AAAf;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAvBD;;GAAMD,I;UAESL,S;;;KAFTK,I;AAyBN,eAAeA,IAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Comment from \"./Comment\";\nimport PostSkeleton from \"./PostSkeleton\";\nimport { getPost } from \"../services/posts\";\nimport { convertDate } from \"../helpers\";\n\nconst Post = () => {\n  const [post, setPost] = useState({});\n  let { id } = useParams();\n  useEffect(() => {\n    getPost(id).then(res => {\n      console.log(res);\n      setPost(res);\n    });\n  }, []);\n  return (\n    <div>\n      <h1 style={{ width: 100 }}>{post.title || <PostSkeleton />}</h1>\n      <small>\n        {post.author ? (\n          `by ${post.author} on ${convertDate(post.date)}`\n        ) : (\n          <PostSkelenton />\n        )}\n      </small>\n      <p>{post.body}</p>\n      <Comment post={post} />\n    </div>\n  );\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}